#!/usr/bin/env node

require('babel-register')({
	presets: ['latest', 'react'],
	plugins: ['transform-class-properties']
});

const app = require('../app');
const http = require('http');

const server = http.createServer(app);

const port = process.env.PORT || 1337;
app.set('port', port);

const onError = function(error) {
	if (error.syscall !== 'listen') throw error;

	const bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`;

	switch (error.code) {
		case 'EACCES':
			console.error(`${bind} requires elevated privileges`);
			process.exit(1);
			break;
		case 'EADDRINUSE':
			console.error(`${bind} is already in use`);
			process.exit(1);
			break;
		default:
			throw error;
	}
};

const onListening = function() {
	const addr = server.address();
	const bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`;
	console.log(`Listening on ${bind}`);
};

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);